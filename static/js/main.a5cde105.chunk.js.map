{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.jsx","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovieFromServer","a","fetch","json","FindMovie","addMovie","useState","setTitle","preview","setPreview","error","setError","handleSubmit","query","result","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","ClassNames","onChange","target","disabled","onClick","App","data","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,+CCT3BG,EAAkB,uCAAG,WAAMd,GAAN,eAAAe,EAAA,sEACZC,MAAM,GAAD,OAHf,+CAGe,OAAUhB,IADH,cAC1BW,EAD0B,yBAGzBA,EAAMM,QAHmB,2CAAH,sDCKlBC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBAClCpB,EADkC,KAC3BqB,EAD2B,OAEXD,mBAAS,MAFE,mBAElCE,EAFkC,KAEzBC,EAFyB,OAGfH,oBAAS,GAHM,mBAGlCI,EAHkC,KAG3BC,EAH2B,KAKnCC,EAAY,uCAAG,WAAMC,GAAN,eAAAZ,EAAA,sEACED,EAAmBa,GADrB,OAGK,WAFlBC,EADa,QAGRC,UACTJ,GAAS,GACTF,EAAW,QAEXA,EAAW,CACTvB,MAAO4B,EAAOE,MACd7B,YAAa2B,EAAOG,KACpB7B,OAAQ0B,EAAOI,OACf7B,QAAQ,8BAAD,OAAgCyB,EAAOK,QAC9CpB,OAAQe,EAAOK,SAGjBR,GAAS,IAfQ,2CAAH,sDAwBlB,OACE,oCACE,0BACErB,UAAU,aACV8B,SAAU,SAACC,GACTA,EAAMC,iBACNV,EAAa1B,KAGf,yBAAKI,UAAU,SACb,2BAAOA,UAAU,QAAQiC,QAAQ,eAAjC,eAIA,yBAAKjC,UAAU,WACb,2BACEkC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAOzC,EACPI,UAAWsC,IACT,QACA,CAAE,YAAalB,IAEjBmB,SA7BS,SAACR,GACpBV,GAAS,GACTJ,EAASc,EAAMS,OAAOH,WA+BfjB,GACC,uBAAGpB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkC,KAAK,SACLlC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEkC,KAAK,SACLlC,UAAU,oBACVyC,UAAWvB,EACXwB,QAAS,WACP3B,EAASG,GACTD,EAAS,IACTE,EAAW,QAPf,sBAgBLD,GACC,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAckB,M,OC/FZyB,EAAM,WAAO,IAAD,EACK3B,mBAAS4B,GADd,mBAChBvC,EADgB,KACRwC,EADQ,KAUvB,OACE,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWe,SAdA,SAAC+B,GACZzC,EAAO0C,MAAK,SAAAxC,GAAK,OAAIA,EAAME,SAAWqC,EAASrC,WAInDoC,EAAU,CAACC,GAAF,mBAAezC,WCR5B2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5cde105.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const url = 'https://www.omdbapi.com/?apikey=8f2a920a&t=';\n\nexport const getMovieFromServer = async(title) => {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n};\n","import './FindMovie.scss';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovieFromServer } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [preview, setPreview] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async(query) => {\n    const result = await getMovieFromServer(query);\n\n    if (result.Response === 'False') {\n      setError(true);\n      setPreview(null);\n    } else {\n      setPreview({\n        title: result.Title,\n        description: result.Plot,\n        imgUrl: result.Poster,\n        imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n        imdbId: result.imdbID,\n      });\n\n      setError(false);\n    }\n  };\n\n  const handleChange = (event) => {\n    setError(false);\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSubmit(title);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              className={ClassNames(\n                'input',\n                { 'is-danger': error },\n              )}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!preview}\n              onClick={() => {\n                addMovie(preview);\n                setTitle('');\n                setPreview(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {preview && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...preview} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const addMovie = (newMovie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([newMovie, ...movies]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}